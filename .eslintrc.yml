env:
  browser: true

parserOptions:
  project: ./tsconfig.json

extends: openstax-poland/typescript/style

rules:
  # Since TS has no type state and doesn't track inter-variable relations, it's
  # unable to determine that `path` is not null inside this if:
  #
  # const [node, path] = Editor.next(editor, options) ?? []
  #
  # if (node != null) {
  #     // Since `[node, path]` is `[Node, Path] | undefined`, then if `node` is
  #     // not `null` then neither is `path`, but TS still thinks it's
  #     // `Path | undefined`.
  # }
  #
  # For this reason we unfortunately use quite a number of non-null assertions.
  '@typescript-eslint/no-non-null-assertion': off

  # Same as default configuration but PascalCase is allowed for variable names.
  # This is because we follow Slate's convention of defining functions connected
  # to interfaces as an object with the same name (using declaration merging):
  #
  # interface Name {}
  #
  # const Name = {
  #     isName(value: unknown): value is Name {
  #         // ...
  #     },
  # }
  #
  # This will become unnecessary once typescript-eslint#2223 is resolved.
  '@typescript-eslint/naming-convention':
    - warn
    - selector: default
      format: [camelCase]
      leadingUnderscore: allow
      trailingUnderscore: allow
    - selector: variable
      format: [camelCase, UPPER_CASE, PascalCase]
      leadingUnderscore: allow
      trailingUnderscore: allow
    - selector: typeLike
      format: [PascalCase]
